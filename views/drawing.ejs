<div id="drawing-area">
<canvas width="640" height="480" id="can"></canvas>
</div>

<div id="palette-area">

<div id="color-black" class="palette" onClick="changeColor('black')"></div>
<div id="color-red" class="palette" onClick="changeColor('red')"></div>
<div id="color-green" class="palette" onClick="changeColor('green')"></div>
<div id="color-blue" class="palette" onClick="changeColor('blue')"></div>

<div class="palette-button"><button id="clear-button" class="color-button" type="button">Clear canvas</button></div>
</div>

<script type="text/javascript" src="/socket.io/socket.io.js"></script>
<script type="text/javascript">

	var socket = io.connect();
	var can, ctx, cb;
	var mouse_condition = false;
	var data = new Array();

	var fillColor = 'black';
	
	function clearCanvas(ctx, can) {
		ctx.fillStyle = "rgb(255,255,255)";
		ctx.fillRect(0, 0, can.width, can.height);
		console.log("clear canvas");
	}

	function changeColor(color) {
		fillColor = color;
		console.log(color);
	};
	
	function drawPos(ctx, d) {
		var pos = d['pos'];
		var i;
	
		ctx.fillStyle = d['color'];
		for(i=0; i<pos.length; i++ ) {
			var p = pos[i];
			ctx.beginPath();
			ctx.arc( p[0], p[1], 5, 0, Math.PI*2, false );
			ctx.fill();
		}
	}

	window.addEventListener( 'load', function() {
		can = document.getElementById('can');
		ctx = can.getContext('2d');
		
		cb = document.getElementById('clear-button');

		cb.addEventListener('click', function(e) {
			clearCanvas(ctx, can);
			socket.emit('message', JSON.stringify({type: 'clear'}));
			console.log( ">>> send clear command" );
			data.length = 0;
		});
		
		can.addEventListener( 'mousemove', function(e) {
			if( mouse_condition) {
				var rect = e.target.getBoundingClientRect();
				var mex = e.clientX - rect.left;
				var mey = e.clientY - rect.top;
				
				ctx.beginPath();
				ctx.fillStyle = fillColor;
				ctx.arc( mex, mey, 5, 0, Math.PI*2, false );
				ctx.fill();
				data.push( [mex, mey] );
			}
		});

		can.addEventListener( 'mousedown', function(e) {
			mouse_condition = true;
			data.length = 0;
		});

		can.addEventListener( 'mouseup', function(e) {
			mouse_condition = false;
			var sendData = {type: 'draw',color: fillColor, pos: data};
			var msg = JSON.stringify(sendData);
			console.log( ">>>" + msg );
			socket.emit( 'message', msg);
			data.length = 0;
		});

		socket.on( 'message', function( msg ) {
			var recieveData = JSON.parse(msg);
			if(recieveData['type'] == 'draw') {
				drawPos(ctx, recieveData);
			}
			else if(recieveData['type'] == 'clear') {
				clearCanvas(ctx, can);
				console.log("recieve clear command");
				data.length = 0;
			}
		});

		socket.on( 'message-init', function( msg ) {
			var i;
			var recieveData = JSON.parse(msg);
			for (i=0; i<recieveData.length; i++) {
				var points = recieveData[i]['pos'];
				drawPos(ctx, recieveData[i]);	
			}
		});
	});
</script>
